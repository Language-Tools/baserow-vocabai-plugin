diff --git a/backend/docker/docker-entrypoint.sh b/backend/docker/docker-entrypoint.sh
index 131ad6562..d059a4d64 100755
--- a/backend/docker/docker-entrypoint.sh
+++ b/backend/docker/docker-entrypoint.sh
@@ -346,6 +346,11 @@ case "$1" in
       echo "Running celery export worker healthcheck..."
       exec celery -A baserow inspect ping -d "export-worker@$HOSTNAME" -t 10 "${@:2}"
     ;;
+    celery-cloudlanguagetoolsworker)
+      BASEROW_CELERY_CLT_WORKER_NUM=${BASEROW_CELERY_CLT_WORKER_NUM:-2}
+      echo "Running celery cloudlanguagetools worker with ${BASEROW_CELERY_CLT_WORKER_NUM} workers..."
+      start_celery_worker --concurrency ${BASEROW_CELERY_CLT_WORKER_NUM} -Q cloudlanguagetools -n cloudlanguagetools-worker@%h "${@:2}"
+    ;;    
     celery-beat)
       # Delay the beat startup as there seems to be bug where the other celery workers
       # starting up interfere with or break the lock obtained by it. Without this the
diff --git a/backend/src/baserow/config/settings/base.py b/backend/src/baserow/config/settings/base.py
index d887fa50c..bcd3a3c7d 100644
--- a/backend/src/baserow/config/settings/base.py
+++ b/backend/src/baserow/config/settings/base.py
@@ -6,6 +6,7 @@ from decimal import Decimal
 from ipaddress import ip_network
 from pathlib import Path
 from urllib.parse import urljoin, urlparse
+import pprint
 
 import dj_database_url
 from celery.schedules import crontab
@@ -28,6 +29,43 @@ class Everything(object):
 if "*" in FEATURE_FLAGS:
     FEATURE_FLAGS = Everything()
 
+# sentry setup
+# ============
+
+import sentry_sdk
+from sentry_sdk.integrations.django import DjangoIntegration
+from sentry_sdk.integrations.celery import CeleryIntegration
+
+def traces_sampler(sampling_context):
+    # this one appears very frequently
+    if sampling_context.get('asgi_scope', {}).get('path', None) == '/_health/':
+        return 0.001
+        
+    # the following are quite frequent
+    celery_task_name = sampling_context.get('celery_job', {}).get('task', None)
+    if celery_task_name in [
+        'baserow.core.jobs.tasks.clean_up_jobs',
+        'baserow.core.action.tasks.cleanup_old_actions',
+        'baserow.core.trash.tasks.mark_old_trash_for_permanent_deletion',
+        'baserow.core.trash.tasks.permanently_delete_marked_trash',
+        'baserow.contrib.database.export.tasks.clean_up_old_jobs'
+    ]:
+        return 0.1
+
+    # if more information is needed about transactions, uncomment the following
+    #pprint.pprint(sampling_context, width=2000, compact=True)
+    return 1.0
+
+sentry_sdk.init(
+    dsn="https://f7a7fa7dfe5f412f852c3bfe2defa091@o968582.ingest.sentry.io/6742581",
+    integrations=[DjangoIntegration(), CeleryIntegration()],
+    send_default_pii=True,
+    traces_sampler=traces_sampler,
+)
+
+# sentry setup end
+# ================
+
 BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
 
 BASEROW_PLUGIN_DIR_PATH = Path(os.environ.get("BASEROW_PLUGIN_DIR", "/baserow/plugins"))
@@ -152,6 +190,8 @@ CELERY_TASK_ROUTES = {
     "baserow.core.usage.tasks": {"queue": BASEROW_GROUP_STORAGE_USAGE_QUEUE},
     "baserow.contrib.database.table.tasks.run_row_count_job": {"queue": "export"},
     "baserow.core.jobs.tasks.clean_up_jobs": {"queue": "export"},
+    # cloudlanguagetools jobs go on a separate queue
+    "*cloudlanguagetools*": {"queue": "cloudlanguagetools"},
 }
 CELERY_SOFT_TIME_LIMIT = 60 * 5  # 5 minutes
 CELERY_TIME_LIMIT = CELERY_SOFT_TIME_LIMIT + 60  # 60 seconds
diff --git a/supervisor/default_baserow_env.sh b/supervisor/default_baserow_env.sh
index facb25de7..53a86d2d7 100755
--- a/supervisor/default_baserow_env.sh
+++ b/supervisor/default_baserow_env.sh
@@ -74,6 +74,7 @@ export DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE:-$DEFAULT_DJANGO_SETTINGS
 export BASEROW_WEB_FRONTEND_STARTUP_COMMAND="${BASEROW_WEB_FRONTEND_STARTUP_COMMAND:-$DEFAULT_WEB_FRONTEND_STARTUP_COMMAND}"
 export BASEROW_BACKEND_STARTUP_COMMAND="${BASEROW_BACKEND_STARTUP_COMMAND:-$DEFAULT_BACKEND_STARTUP_COMMAND}"
 export BASEROW_CELERY_WORKER_STARTUP_COMMAND="${BASEROW_CELERY_WORKER_STARTUP_COMMAND:-$DEFAULT_CELERY_WORKER_STARTUP_COMMAND}"
+export BASEROW_CELERY_CLT_WORKER_STARTUP_COMMAND="celery-cloudlanguagetoolsworker"
 export BASEROW_CELERY_EXPORT_WORKER_STARTUP_COMMAND="${BASEROW_CELERY_EXPORT_WORKER_STARTUP_COMMAND:-$DEFAULT_CELERY_EXPORT_WORKER_STARTUP_COMMAND}"
 export BASEROW_CELERY_BEAT_STARTUP_COMMAND="${BASEROW_CELERY_BEAT_STARTUP_COMMAND:-$DEFAULT_CELERY_BEAT_STARTUP_COMMAND}"
 export XDG_CONFIG_HOME=/home/$DOCKER_USER/
diff --git a/supervisor/supervisor.conf b/supervisor/supervisor.conf
index 0856cd2fc..a2d9f7918 100644
--- a/supervisor/supervisor.conf
+++ b/supervisor/supervisor.conf
@@ -60,6 +60,19 @@ priority=2
 startretries=3
 startsecs=30
 
+[program:celerycltworker]
+user=%(ENV_DOCKER_USER)s
+directory=/baserow/backend
+command=/baserow/supervisor/wrapper.sh CYAN CLT_WORKER ./docker/docker-entrypoint.sh %(ENV_BASEROW_CELERY_CLT_WORKER_STARTUP_COMMAND)s
+stdout_logfile=/dev/stdout
+stdout_logfile_maxbytes=0
+stderr_logfile=/dev/stdout
+stderr_logfile_maxbytes=0
+autostart=true
+priority=2
+startretries=3
+startsecs=30
+
 [program:exportworker]
 user=%(ENV_DOCKER_USER)s
 directory=/baserow/backend
diff --git a/web-frontend/config/nuxt.config.base.js b/web-frontend/config/nuxt.config.base.js
index 08099307e..74a201a7a 100644
--- a/web-frontend/config/nuxt.config.base.js
+++ b/web-frontend/config/nuxt.config.base.js
@@ -26,6 +26,7 @@ export default function (
     base + '/modules/database/module.js',
     premiumBase + '/modules/baserow_premium/module.js',
     enterpriseBase + '/modules/baserow_enterprise/module.js',
+    '@nuxtjs/sentry'
   ]
 
   const featureFlags = getFeatureFlags()
@@ -37,6 +38,16 @@ export default function (
   const modules = baseModules.concat(additionalModules)
   return {
     modules,
+    sentry: {
+      dsn: 'https://33f709910b214ed282315bd91344bae0@o968582.ingest.sentry.io/6742673',
+      config: {
+      },
+      publishRelease: {
+        authToken: '9b89e612331511edbbd996b6a33f5072',
+        org: 'language-tools',
+        project: 'baserow-vocabai-frontend',
+      }      
+    },    
     build: {
       extend(config, ctx) {
         config.node = { fs: 'empty' }
diff --git a/web-frontend/package.json b/web-frontend/package.json
index e57b79bfa..54c2835cd 100644
--- a/web-frontend/package.json
+++ b/web-frontend/package.json
@@ -46,7 +46,8 @@
     "uuid": "^8.3.2",
     "vue-chartjs": "^3.5.1",
     "vuejs-datepicker": "^1.6.2",
-    "vuelidate": "^0.7.5"
+    "vuelidate": "^0.7.5",
+    "@nuxtjs/sentry": "^6.0.0"
   },
   "devDependencies": {
     "@nuxtjs/eslint-config": "^6.0.1",
@@ -79,6 +80,7 @@
     "stylelint": "^13.13.1",
     "stylelint-config-standard": "^22.0.0",
     "stylelint-webpack-plugin": "^3.0.1",
-    "vue-jest": "^3.0.3"
+    "vue-jest": "^3.0.3",
+    "@sentry/webpack-plugin": "^1.19.0"
   }
 }
